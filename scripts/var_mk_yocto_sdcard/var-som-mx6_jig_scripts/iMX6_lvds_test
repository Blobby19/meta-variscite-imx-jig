#!/bin/sh

if [[ $SOMTYPE == "DART-MX6" ]]; then
	GPIO_PINS1='126 127 133 107 83 84 25 6 1 154 105 28 203 155 111 110 4 88 89 8 7 104 87 63 102 106 103'
	GPIO_PINS2='126 127 133'
	RGB_PINS='87 63 8 7 106 102 103 104 83 84 111 110 1 6 88 89 203 155 154 105 28 4 25 107'
	TEST_PATTERNS='0x000000 0xaaaaaa 0x555555 0xffffff'

else # VAR-SOM-MX6 || VAR-SOM-SOLO/DUAL
	GPIO_PINS1='163 159 103 102 104 105 3 142 140 145 85 43 2 41 63 87 91 93 161 146 126 164 154 147 94 86'
	GPIO_PINS2='163 159'
	RGB_PINS='103 102 104 105 3 142 140 145 85 43 2 41 63 87 91 93 161 146 126 164 154 147 94 86'
	if [[ $SOMREV == "SOM_REV_126" ]]; then
		TEST_PATTERNS='0x007000 0x0070ff 0x00ff00 0xff7000'
	elif [[ $SOMTYPE == "SOMSOLO" && $WIFI == "YES" ]]; then
		TEST_PATTERNS='0x000000 0x0000ff 0x00fe00 0xff0000'
        elif [[ $SOMTYPE == "SOMSOLO" && $BT_NO_BUFF_YES == "YES" ]]; then
                TEST_PATTERNS='0x000100 0x0001ff 0x00ff00 0xff0100'
	else
		TEST_PATTERNS='0x000000 0x0000ff 0x00ff00 0xff0000'
	fi

	if [[ $CPUTYPE == "MX6DL" ]]; then
		PAD_EIM_D29_ADDR=0x020E0178
	else #$CPUTYPE == "MX6Q"
		PAD_EIM_D29_ADDR=0x020E00C8
	fi
fi

EXIT_VAL=0

quit()
{
	echo
	echo -e "$@"
	if [[ $SOMTYPE != "DART-MX6" ]]; then
		# Move back RTS pin of BT to be RTS
		devmem2 $PAD_EIM_D29_ADDR w 0x00000004 > /dev/null
	fi
	exit $EXIT_VAL
}

select_lvds()
{
	if [[ $1 != "0" && $1 != "1" ]]; then
		EXIT_VAL=1
		quit "FAIL: select_lvds: got invalid value"
	fi
	if [[ $SOMTYPE == "DART-MX6" ]]; then
		#select
		echo $1 > /sys/class/gpio/gpio127/value
		#LVDS Enable
		echo 1 > /sys/class/gpio/gpio133/value
		#Latches Enable
		echo 0 > /sys/class/gpio/gpio126/value

	else # VAR-SOM-MX6 || VAR-SOM-SOLO/DUAL
		#select
		echo $1 > /sys/class/gpio/gpio159/value
		#Latches Enable
		echo 0 > /sys/class/gpio/gpio163/value
	fi
}

init_gpio_pins()
{
	for i in $GPIO_PINS1
	do
		if [ ! -d "/sys/class/gpio/gpio$i" ]; then
			echo $i > /sys/class/gpio/export
		fi
		echo in > /sys/class/gpio/gpio$i/direction
	done

	for i in $GPIO_PINS2
	do
		echo out > /sys/class/gpio/gpio$i/direction
	done
}

read_rgb_pins()
{
	a=0
	for i in $RGB_PINS
	do
		b=`cat /sys/class/gpio/gpio$i/value`
		if [ "$b" != "0" ]; then
			let b=1
		fi
		let a="$a + $a + $b"
	done

	printf "0x%06x\n" $a
}

test_pattern()
{
	./screen_fill $FRAME_BUFFER $1 800 480
	usleep 150000

	for i in 1 2 3
	do
		val=`read_rgb_pins`
		if [ "$val" != "$1" ]; then
			val=`read_rgb_pins`
			if [ "$val" != "$1" ]; then
				EXIT_VAL=1
				quit "FAIL: Got $val instead $1"
			fi
		fi
	done
}

test_screen()
{
	for i in $TEST_PATTERNS
	do
		echo $SELECTED_IF $i
		test_pattern $i
	done
}

echo 0 > /sys/class/graphics/fbcon/cursor_blink

if [[ $SOMTYPE == "DART-MX6" ]]; then
	echo 24 > /sys/class/graphics/fb0/bits_per_pixel

else # VAR-SOM-MX6 || VAR-SOM-SOLO/DUAL
	# Disable BT UART and Audio buffers
	for i in 122 123
	do
		if [ ! -d "/sys/class/gpio/gpio$i" ]; then
			echo $i > /sys/class/gpio/export
		fi
		echo out > /sys/class/gpio/gpio$i/direction
		echo 1 > /sys/class/gpio/gpio$i/value
	done

	# Move RTS pin of BT to be GPIO
	devmem2 $PAD_EIM_D29_ADDR w 0x00000015 > /dev/null

	if [[ $SOMREV == "SOM_REV_126" ]]; then
		if [[ $CPUTYPE == "MX6DL" ]]; then
			devmem2 0x020E02DC w 0x00000015 > /dev/null
			devmem2 0x020E02E0 w 0x00000015 > /dev/null
			devmem2 0x020E02E4 w 0x00000015 > /dev/null
			devmem2 0x020E02E8 w 0x00000015 > /dev/null
			devmem2 0x020E02EC w 0x00000015 > /dev/null
			devmem2 0x020E02F0 w 0x00000015 > /dev/null
		else #$CPUTYPE == "MX6Q"
			devmem2 0x020E033C w 0x00000015 > /dev/null
			devmem2 0x020E0340 w 0x00000015 > /dev/null
			devmem2 0x020E0344 w 0x00000015 > /dev/null
			devmem2 0x020E0348 w 0x00000015 > /dev/null
			devmem2 0x020E034c w 0x00000015 > /dev/null
			devmem2 0x020E0350 w 0x00000015 > /dev/null
		fi
	fi
fi

init_gpio_pins
FRAME_BUFFER=/dev/fb0

select_lvds 0
SELECTED_IF=LVDS0
test_screen

select_lvds 1
SELECTED_IF=LVDS1
test_screen

quit "PASS"
